# CART test packages for CONALAUN version 1.000

## for Future functionality, where we validate that an "RR" cannot just exist in an "I" line or just exist in "C1" line...
## we have CART FSDBs already that validate this.
## we will have a "FLAG" set to True after every loop through main loop (main loop that reads in LUI, and parses ICO file), and 
## that flag will, by default, be set to do that validation
## but for FSDBs that violate that, we'll have a CART_INCLUDE line that will say "If VERSION=1.000 *and* current File state DB is <X>, then
## disable that FLAG.  (until next loop). That will allow us to test with FSDBs that otherwise would be rejected by CONALAUN.

#----------------------------------------------------------------------------------------------------------------------------------------------------------

areas = class,classtextlines,smolvariables,concepts,classextraconditions,conceptsymbols,groups,rrgroupmemberconditions,srgroupmemberconditions,synsrtosr,synrrtosr,synrrtorr,rrcatalogue,rrrelations,lexicon,termidset,nodelete,testa,testb,fssc

# testa : output of table: 'char_pos_term_id' (in ./testpackages/files/v1.000/testa.py)
# testb : output of table: 'char_pos_map' (for test [ check that applicable entries in table: 'char_pos_map' are deleted (when 'id' no longer referenced by another row in table: char_pos_term_id)])

#----------------------------------------------------------------------------------------------------------------------------------------------------------

# smol.tar.gz - tests SMOL (state management output lines) AND ECs - extra conditions.
[smol.tar.gz:class,classtextlines,smolvariables,concepts,groups,classextraconditions]
"input0-0"
"input0-1"
"input0-2"



[concepts.tar.gz:concepts,conceptsymbols,classtextlines,classextraconditions]
"input1-0"



[synandgroups.tar.gz:rrgroupmemberconditions,srgroupmemberconditions,synsrtosr,synrrtosr,synrrtorr,rrcatalogue,rrrelations]
"input2-0"



[lexicon_dict.tar.gz:lexicon]
"input3-0"



[term_id_assign.tar.gz:termidset]
"input4-0"
"input4-1"



[no_delete_term_if_used.tar.gz:nodelete,testa,testb]
"input5-0"
"input5-1"



# The files in 'fssc.tar.gz' won't be used, instead
# we use an 'injector' to directly manipulate the variables in memory
# before the test.  See './testpackages/files/v1.000/inject_data_only_new_terms.py' 

[fssc.tar.gz:fssc]
"input6-0"





